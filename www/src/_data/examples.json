[
  {
    "title": "Getting Started",
    "description": "Create HTML, handle events, and bind data the fritz2 way.",
    "route":"/gettingstarted",
    "icon": "trending-up"
  },
  {
    "title": "Nested Model",
    "description": "Data binding of elements in deep nested models and lists is easy as pie in fritz2. See how to do so using lenses.",
    "route": "/nestedmodel",
    "icon": "collection"
  },
  {
    "title": "Validation",
    "description": "Include reusable validation in your stores and show the results - at your form elements for example.",
    "route": "/validation",
    "icon": "light-bulb"
  },
  {
    "title": "Routing",
    "description": "Create routing through your single-page-app and handle parameters (deep links).",
    "route": "/routing",
    "icon": "map"
  },
  {
    "title": "Remote",
    "description": "Wraps the browser's api to asynchronously communicate with your backend in a more Kotlin-like way.",
    "route": "/remote",
    "icon": "cloud-upload"
  },
  {
    "title": "Master Detail",
    "description": "Use the master detail pattern to separate the details section from the collection view. Includes undo and spinner.",
    "route": "/masterdetail",
    "icon": "archive"
  },
  {
    "title": "WebComponent",
    "description": "Build WebComponents with fritz2 or use WebComponents provided by others in your projects.",
    "route": "/webcomponent",
    "icon": "puzzle"
  },
  {
    "title": "Todo MVC",
    "description": "Our implementation of the TodoMVC specification. Compare fritz2 with react, vue.js, etc.",
    "route": "/todomvc",
    "icon": "clipboard-list"
  },
  {
    "title": "Tic-Tac-Toe",
    "description": "Demonstrates the combination of UI, logic, and state with fritz2.",
    "route": "/tictactoe",
    "icon": "view-grid"
  }
]